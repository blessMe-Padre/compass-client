:root {
  --background: #ffffff;
  --blue: #007cc2;
  --black: #1b1b1b;
  --black2: #262626;
  --white: #ffffff;
  --gray: #6b6b6b;
  --light-gray: #c4c4c4;
  --super-light-gray: #f6f6f6;
  --orange: #f79410;
  --gray-gray: #eaeaea;

  --hover-blue: #438db8;

  --font-family: "Ubuntu", sans-serif;
  --second-family: "GT Eesti Pro Display", sans-serif;
  --third-family: "Jost", sans-serif;
  --font3: "Futura PT", sans-serif;

  /* animation function */
  --anim-function: 0.3s ease;

  --toggle-color: #1b1b1b;
  --toggle-color-gray: #6b6b6b;
  --reverse-color: #ffffff;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #2e2e2e;
    --toggle-color: #ffffff;
    --reverse-color: #1b1b1b;
    --toggle-color-gray: #ffffff;
  }
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  a.primary:hover {
    background: var(--button-primary-hover);
    border-color: transparent;
  }

  a.secondary:hover {
    background: var(--button-secondary-hover);
    border-color: transparent;
  }

  .footer a:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
  }
}

@media (prefers-color-scheme: dark) {
  .logo {
    filter: invert();
  }
}

html,
body {
  /* max-width: 100vw; */
  /* overflow-x: hidden; */
  /* min-height: 100vh; */
  /* display: grid; */
  /* grid-template-rows: min-content 1fr min-content; */
  color: var(--toggle-color);
  background: var(--background);
  font-family: var(--font-family);
  /* background-color: #2e2e2e; */
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

ul {
  list-style: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clipPath: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.container {
  max-width: 1480px;
  padding: 0 20px;
  margin: 0 auto;
}

.relative {
  position: relative;
}

svg,
svg path {
  transition: fill 0.3s ease;
}

.swiper-wrapper {
  justify-items: stretch;
}

.swiper-slide {
  height: auto !important;
}

.swiper-pagination-bullet {
  background: var(--white) !important;
  opacity: 1 !important;
  width: 100% !important;
  height: 2px !important;
}

.swiper-pagination-bullet-active {
  background: var(--light-gray) !important;
}

.section {
  padding-top: clamp(3.125rem, 1.585rem + 6.573vw, 7.5rem);
  padding-bottom: clamp(3.125rem, 1.585rem + 6.573vw, 7.5rem);
}

.flex {
  display: flex;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

.gap-10 {
  gap: 10px;
}

.gap-5 {
  gap: 5px;
}

.align-center {
  align-items: center;
}

.thumbnail_list .swiper-slide-thumb-active {
  border: 2px solid var(--blue);
}

.page_title {
  color: var(--toggle-color);
  font-family: 700;
  font-size: 44px;

  padding: 40px 0;

  @media (max-width: 780px) {
    font-size: 16px;
    padding: 20px 0;
  }
}

@view-transition {
  navigation: auto;
}

/* PRELOADER */

.pl {
  display: block;
  width: 9.375em;
  height: 9.375em;
}

.pl__arrows,
.pl__ring-rotate,
.pl__ring-stroke,
.pl__tick {
  animation-duration: 2s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.pl__arrows {
  animation-name: arrows;
  transform: rotate(45deg);
  transform-origin: 16px 52px;
}

.pl__ring-rotate,
.pl__ring-stroke {
  transform-origin: 80px 80px;
}

.pl__ring-rotate {
  animation-name: ringRotate;
}

.pl__ring-stroke {
  animation-name: ringStroke;
  transform: rotate(-45deg);
}

.pl__tick {
  animation-name: tick;
}

.pl__tick:nth-child(2) {
  animation-delay: -1.75s;
}

.pl__tick:nth-child(3) {
  animation-delay: -1.5s;
}

.pl__tick:nth-child(4) {
  animation-delay: -1.25s;
}

.pl__tick:nth-child(5) {
  animation-delay: -1s;
}

.pl__tick:nth-child(6) {
  animation-delay: -0.75s;
}

.pl__tick:nth-child(7) {
  animation-delay: -0.5s;
}

.pl__tick:nth-child(8) {
  animation-delay: -0.25s;
}

/* Animations */
@keyframes arrows {
  from {
    transform: rotate(45deg);
  }

  to {
    transform: rotate(405deg);
  }
}

@keyframes ringRotate {
  from {
    transform: rotate(0);
  }

  to {
    transform: rotate(720deg);
  }
}

@keyframes ringStroke {

  from,
  to {
    stroke-dashoffset: 452;
    transform: rotate(-45deg);
  }

  50% {
    stroke-dashoffset: 169.5;
    transform: rotate(-180deg);
  }
}

@keyframes tick {

  from,
  3%,
  47%,
  to {
    stroke-dashoffset: -12;
  }

  14%,
  36% {
    stroke-dashoffset: 0;
  }
}